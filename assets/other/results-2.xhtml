<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<svrl:schematron-output xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                        xmlns:xs="http://www.w3.org/2001/XMLSchema"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns:saxon="http://saxon.sf.net/"
                        xmlns:schold="http://www.ascc.net/xml/schematron"
                        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
                        xmlns:xhtml="http://www.w3.org/1999/xhtml"
                        xmlns:nf="http://reference.niem.gov/niem/specification/naming-and-design-rules/4.0/#NDRFunctions"
                        xmlns:ct="http://release.niem.gov/niem/conformanceTargets/3.0/"
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:appinfo="http://release.niem.gov/niem/appinfo/4.0/"
                        xmlns:structures="http://release.niem.gov/niem/structures/4.0/"
                        xmlns:term="http://release.niem.gov/niem/appinfo/4.0/"
                        xmlns:catalog="urn:oasis:names:tc:entity:xmlns:xml:catalog"
                        xmlns:impl="http://example.org/impl"
                        xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                        title="Rules for extension XML Schema documents"
                        schemaVersion=""><!--   
		   
		   
		 -->
   <svrl:ns-prefix-in-attribute-values uri="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
   <svrl:ns-prefix-in-attribute-values uri="http://www.w3.org/1999/XSL/Transform" prefix="xsl"/>
   <svrl:ns-prefix-in-attribute-values uri="http://reference.niem.gov/niem/specification/naming-and-design-rules/4.0/#NDRFunctions"
                                       prefix="nf"/>
   <svrl:ns-prefix-in-attribute-values uri="http://release.niem.gov/niem/conformanceTargets/3.0/" prefix="ct"/>
   <svrl:ns-prefix-in-attribute-values uri="http://www.w3.org/2001/XMLSchema-instance" prefix="xsi"/>
   <svrl:ns-prefix-in-attribute-values uri="http://release.niem.gov/niem/appinfo/4.0/" prefix="appinfo"/>
   <svrl:ns-prefix-in-attribute-values uri="http://release.niem.gov/niem/structures/4.0/" prefix="structures"/>
   <svrl:ns-prefix-in-attribute-values uri="http://release.niem.gov/niem/appinfo/4.0/" prefix="term"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_4-4"
                        name="Document element has attribute ct:conformanceTargets"/>
   <svrl:fired-rule context="*[. is nf:get-document-element(.)                        or exists(@ct:conformanceTargets)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_4-6"
                        name="Schema claims extension conformance target"/>
   <svrl:fired-rule context="*[. is nf:get-document-element(.)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_7-4"
                        name="Document element is xs:schema"/>
   <svrl:fired-rule context="*[. is nf:get-document-element(.)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-1"
                        name="No base type in the XML namespace"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-2"
                        name="No base type of xs:ID"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-3"
                        name="No base type of xs:IDREF"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-4"
                        name="No base type of xs:IDREFS"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-5"
                        name="No base type of xs:anyType"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-6"
                        name="No base type of xs:anySimpleType"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-7"
                        name="No base type of xs:NOTATION"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-8"
                        name="No base type of xs:ENTITY"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-9"
                        name="No base type of xs:ENTITIES"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-10"
                        name="Simple type definition is top-level"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-12"
                        name="Simple type has data definition"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-13"
                        name="No list item type of xs:ID"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-14"
                        name="No list item type of xs:IDREF"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-15"
                        name="No list item type of xs:anySimpleType"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-16"
                        name="No list item type of xs:ENTITY"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-17"
                        name="No union member types of xs:ID"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-18"
                        name="No union member types of xs:IDREF"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-19"
                        name="No union member types of xs:IDREFS"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-20"
                        name="No union member types of xs:anySimpleType"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-21"
                        name="No union member types of xs:ENTITY"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-22"
                        name="No union member types of xs:ENTITIES"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-23"
                        name="Enumeration has data definition"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-24"
                        name="Complex type definitions is top-level"/>
   <svrl:fired-rule context="xs:complexType"/>
   <svrl:fired-rule context="xs:complexType"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-25"
                        name="Complex type has data definition"/>
   <svrl:fired-rule context="xs:complexType"/>
   <svrl:fired-rule context="xs:complexType"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-26"
                        name="No mixed content on complex type"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-27"
                        name="No mixed content on complex content"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-28"
                        name="Complex type content is explicitly simple or complex"/>
   <svrl:fired-rule context="xs:complexType"/>
   <svrl:fired-rule context="xs:complexType"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-30"
                        name="Base type of complex type with complex content must have complex content"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-35"
                        name="Element declaration is top-level"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-36"
                        name="Element declaration has data definition"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-37"
                        name="Untyped element is abstract"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-38"
                        name="Element of type xs:anySimpleType is abstract"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-39"
                        name="Element type not in the XML Schema namespace"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-40"
                        name="Element type not in the XML namespace"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-41"
                        name="Element type is not simple type"/>
   <svrl:fired-rule context="xs:element[@type]"/>
   <svrl:fired-rule context="xs:element[@type]"/>
   <svrl:fired-rule context="xs:element[@type]"/>
   <svrl:fired-rule context="xs:element[@type]"/>
   <svrl:fired-rule context="xs:element[@type]"/>
   <svrl:fired-rule context="xs:element[@type]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-44"
                        name="No element default value"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-45"
                        name="No element fixed value"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:fired-rule context="xs:element"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-47"
                        name="Attribute declaration is top-level"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-48"
                        name="Attribute declaration has data definition"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-49"
                        name="Attribute declaration has type"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-50"
                        name="No attribute type of xs:ID"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-51"
                        name="No attribute type of xs:IDREF"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-52"
                        name="No attribute type of xs:IDREFS"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-53"
                        name="No attribute type of xs:ENTITY"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-54"
                        name="No attribute type of xs:ENTITIES"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-55"
                        name="No attribute type of xs:anySimpleType"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-56"
                        name="No attribute default values"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-57"
                        name="No attribute fixed values"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-58"
                        name="No use of element xs:notation"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-60"
                        name="No xs:all"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-62"
                        name="xs:sequence must be child of xs:extension&#xA;              or xs:restriction"/>
   <svrl:fired-rule context="xs:sequence"/>
   <svrl:fired-rule context="xs:sequence"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-64"
                        name="xs:choice must be child of xs:sequence"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-65"
                        name="Sequence has minimum cardinality 1"/>
   <svrl:fired-rule context="xs:sequence"/>
   <svrl:fired-rule context="xs:sequence"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-66"
                        name="Sequence has maximum cardinality 1"/>
   <svrl:fired-rule context="xs:sequence"/>
   <svrl:fired-rule context="xs:sequence"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-67"
                        name="Choice has minimum cardinality 1"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-68"
                        name="Choice has maximum cardinality 1"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-71"
                        name="No use of xs:unique"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-72"
                        name="No use of xs:key"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-73"
                        name="No use of xs:keyref"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-74"
                        name="No use of xs:group"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-75"
                        name="No definition of attribute groups"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-76"
                        name="Comment is not recommended"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-77"
                        name="Documentation element has no element children"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-78"
                        name="xs:appinfo children are comments, elements, or whitespace"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-79"
                        name="Appinfo child elements have namespaces"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-80"
                        name="Appinfo descendants are not XML Schema elements"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-81"
                        name="Schema has data definition"/>
   <svrl:fired-rule context="xs:schema"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-82"
                        name="Schema document defines target namespace"/>
   <svrl:fired-rule context="xs:schema"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-84"
                        name="Schema has version"/>
   <svrl:fired-rule context="xs:schema"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-87"
                        name="No use of xs:redefine"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-88"
                        name="No use of xs:include"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-89"
                        name="xs:import must have namespace"/>
   <svrl:fired-rule context="xs:import"/>
   <svrl:fired-rule context="xs:import"/>
   <svrl:fired-rule context="xs:import"/>
   <svrl:fired-rule context="xs:import"/>
   <svrl:fired-rule context="xs:import"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-91"
                        name="Namespace referenced by attribute type is imported"/>
   <svrl:fired-rule context="xs:*[@type]"/>
   <svrl:fired-rule context="xs:*[@type]"/>
   <svrl:fired-rule context="xs:*[@type]"/>
   <svrl:fired-rule context="xs:*[@type]"/>
   <svrl:fired-rule context="xs:*[@type]"/>
   <svrl:fired-rule context="xs:*[@type]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-92"
                        name="Namespace referenced by attribute base is imported"/>
   <svrl:fired-rule context="xs:*[@base]"/>
   <svrl:fired-rule context="xs:*[@base]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-93"
                        name="Namespace referenced by attribute itemType is imported"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-94"
                        name="Namespaces referenced by attribute memberTypes is imported"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-95"
                        name="Namespace referenced by attribute ref is imported"/>
   <svrl:fired-rule context="xs:*[@ref]"/>
   <svrl:fired-rule context="xs:*[@ref]"/>
   <svrl:fired-rule context="xs:*[@ref]"/>
   <svrl:fired-rule context="xs:*[@ref]"/>
   <svrl:fired-rule context="xs:*[@ref]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_9-96"
                        name="Namespace referenced by attribute substitutionGroup is imported"/>
   <svrl:fired-rule context="xs:*[@substitutionGroup]"/>
   <svrl:fired-rule context="xs:*[@substitutionGroup]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-2"
                        name="Object type with complex content is derived from object type"/>
   <svrl:fired-rule context="xs:complexType[exists(xs:complexContent)                                     and not(ends-with(@name, 'AssociationType')                                         or ends-with(@name, 'MetadataType')                                         or ends-with(@name, 'AugmentationType'))]"/>
   <svrl:fired-rule context="xs:complexType[exists(xs:complexContent)                                     and not(ends-with(@name, 'AssociationType')                                         or ends-with(@name, 'MetadataType')                                         or ends-with(@name, 'AugmentationType'))]"/>
   <svrl:failed-assert test="every $derivation-method in (xs:complexContent/xs:extension, xs:complexContent/xs:restriction), $base in $derivation-method/@base, $base-qname in resolve-QName($base, $derivation-method), $base-local-name in local-name-from-QName($base-qname) satisfies ( $base-qname = xs:QName('structures:ObjectType') or not(ends-with($base-local-name, 'AssociationType') or ends-with($base-local-name, 'MetadataType') or ends-with($base-local-name, 'AugmentationType')))"
                       location="/*[local-name()='schema' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][1]/*[local-name()='complexType' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][2]">
      <svrl:text>Rule 10-2: An object type with complex content MUST be derived from structures:ObjectType or from another object type.</svrl:text>
   </svrl:failed-assert>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-3"
                        name="RoleOf element type is an object type"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-4"
                        name="Only object type has RoleOf element"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-7"
                        name="Import of external namespace has data definition"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-9"
                        name="Structure of external adapter type definition follows pattern"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-10"
                        name="Element use from external adapter type defined by external schema documents"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-11"
                        name="External adapter type not a base type"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-14"
                        name="External attribute use has data definition"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-16"
                        name="External element use has data definition"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-17"
                        name="Name of code type ends in &#34;CodeType&#34;"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-19"
                        name="Element of code type has code representation term"/>
   <svrl:fired-rule context="xs:element[exists(@name) and exists(@type) and ends-with(@type, 'CodeType')]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-20"
                        name="Proxy type has designated structure"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-21"
                        name="Association type is derived from association type"/>
   <svrl:fired-rule context="xs:complexType"/>
   <svrl:fired-rule context="xs:complexType"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-22"
                        name="Association element type is an association type"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-24"
                        name="Augmentable type has at most one augmentation point element"/>
   <svrl:fired-rule context="xs:complexType[                        @name[not(ends-with(., 'MetadataType'))                              and not(ends-with(., 'AugmentationType'))]                        and empty(@appinfo:externalAdapterTypeIndicator)                        and xs:complexContent]"/>
   <svrl:fired-rule context="xs:complexType[                        @name[not(ends-with(., 'MetadataType'))                              and not(ends-with(., 'AugmentationType'))]                        and empty(@appinfo:externalAdapterTypeIndicator)                        and xs:complexContent]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-25"
                        name="Augmentation point corresponds to augmentable type"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-26"
                        name="An augmentation point has no type"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-27"
                        name="An augmentation point has no substitution group"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-28"
                        name="Augmentation point element may only be referenced by its type"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-31"
                        name="Augmentation point reference must be last particle"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-34"
                        name="Schema component with name ending in &#34;AugmentationType&#34; is an augmentation type"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-35"
                        name="Type derived from augmentation type is an augmentation type"/>
   <svrl:fired-rule context="xs:*[(self::xs:restriction or self::xs:extension)                           and ends-with(@base, 'AugmentationType')]"/>
   <svrl:failed-assert test="ancestor::xs:complexType[ends-with(@name, 'AugmentationType')]"
                       location="/*[local-name()='schema' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][1]/*[local-name()='complexType' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][2]/*[local-name()='complexContent' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][1]/*[local-name()='extension' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][1]">
      <svrl:text>Rule 10-35: A type definition derived from an augmentation type MUST be an augmentation type definition</svrl:text>
   </svrl:failed-assert>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-36"
                        name="Augmentation element type is an augmentation type"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:failed-assert test="exists(@type[ends-with(., 'AugmentationType')]) = exists(@name[ends-with(., 'Augmentation')])"
                       location="/*[local-name()='schema' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][1]/*[local-name()='element' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][3]">
      <svrl:text>Rule 10-36: An element declaration MUST have a name that ends in "Augmentation" if and only if it has a type that is an augmentation type.</svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-40"
                        name="Metadata types are derived from metadata types"/>
   <svrl:fired-rule context="xs:complexType"/>
   <svrl:fired-rule context="xs:complexType"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-41"
                        name="Metadata element declaration type is a metadata type"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:fired-rule context="xs:element[exists(@name)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-43"
                        name="Name of element that ends in &#34;Representation&#34; is abstract"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-46"
                        name="Schema component names have only specific characters"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-49"
                        name="Attribute name begins with lower case letter"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-50"
                        name="Name of schema component other than attribute and proxy type begins with upper case letter"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:fired-rule context="xs:*[exists(@name)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-69"
                        name="Deprecated annotates schema component"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-70"
                        name="External import indicator annotates import"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-72"
                        name="appinfo:appliesToTypes annotates metadata element"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-74"
                        name="appinfo:appliesToElements annotates metadata element"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-76"
                        name="appinfo:LocalTerm annotates schema"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_10-77"
                        name="appinfo:LocalTerm has literal or definition"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-1"
                        name="Name of type ends in &#34;Type&#34;"/>
   <svrl:fired-rule context="xs:*[(self::xs:simpleType or self::xs:complexType) and exists(@name)]"/>
   <svrl:failed-assert test="ends-with(@name, 'Type')"
                       location="/*[local-name()='schema' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][1]/*[local-name()='complexType' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][1]">
      <svrl:text>Rule 11-1: A type definition schema component that does not define a proxy type MUST have a name that ends in "Type".</svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="xs:*[(self::xs:simpleType or self::xs:complexType) and exists(@name)]"/>
   <svrl:failed-assert test="ends-with(@name, 'Type')"
                       location="/*[local-name()='schema' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][1]/*[local-name()='complexType' and namespace-uri()='http://www.w3.org/2001/XMLSchema'][2]">
      <svrl:text>Rule 11-1: A type definition schema component that does not define a proxy type MUST have a name that ends in "Type".</svrl:text>
   </svrl:failed-assert>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-2"
                        name="Base type definition defined by conformant schema"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:fired-rule context="xs:*[exists(@base)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-3"
                        name="Name of simple type ends in &#34;SimpleType&#34;"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-5"
                        name="List item type defined by conformant schemas"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-6"
                        name="Union member types defined by conformant schemas"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-7"
                        name="Name of a code simple type has standard suffix"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-9"
                        name="Attribute of code simple type has code representation term"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-10"
                        name="Complex type with simple content has structures:SimpleObjectAttributeGroup"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-11"
                        name="Element type does not have a simple type name"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-12"
                        name="Element type is from conformant namespace"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:fired-rule context="xs:element[exists(@type)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-13"
                        name="Name of element that ends in &#34;Abstract&#34; is abstract"/>
   <svrl:fired-rule context="xs:element[@name]"/>
   <svrl:fired-rule context="xs:element[@name]"/>
   <svrl:fired-rule context="xs:element[@name]"/>
   <svrl:fired-rule context="xs:element[@name]"/>
   <svrl:fired-rule context="xs:element[@name]"/>
   <svrl:fired-rule context="xs:element[@name]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-14"
                        name="Name of element declaration with simple content has representation term"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-16"
                        name="Element substitution group defined by conformant schema"/>
   <svrl:fired-rule context="xs:element[exists(@substitutionGroup)]"/>
   <svrl:fired-rule context="xs:element[exists(@substitutionGroup)]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-17"
                        name="Attribute type defined by conformant schema"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-18"
                        name="Attribute name uses representation term"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-20"
                        name="Element reference defined by conformant schema"/>
   <svrl:fired-rule context="xs:element[exists(ancestor::xs:complexType[empty(@appinfo:externalAdapterTypeIndicator)]) and @ref]"/>
   <svrl:fired-rule context="xs:element[exists(ancestor::xs:complexType[empty(@appinfo:externalAdapterTypeIndicator)]) and @ref]"/>
   <svrl:fired-rule context="xs:element[exists(ancestor::xs:complexType[empty(@appinfo:externalAdapterTypeIndicator)]) and @ref]"/>
   <svrl:fired-rule context="xs:element[exists(ancestor::xs:complexType[empty(@appinfo:externalAdapterTypeIndicator)]) and @ref]"/>
   <svrl:fired-rule context="xs:element[exists(ancestor::xs:complexType[empty(@appinfo:externalAdapterTypeIndicator)]) and @ref]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-21"
                        name="Referenced attribute defined by conformant schemas"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-22"
                        name="Schema uses only known attribute groups"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-29"
                        name="Standard opening phrase for element"/>
   <svrl:fired-rule context="xs:element[@name]/xs:annotation/xs:documentation[1]"/>
   <svrl:fired-rule context="xs:element[@name]/xs:annotation/xs:documentation[1]"/>
   <svrl:fired-rule context="xs:element[ends-with(@name, 'Augmentation')]/xs:annotation/xs:documentation[1]"/>
   <svrl:fired-rule context="xs:element[ends-with(@name, 'Indicator')]/xs:annotation/xs:documentation[1]"/>
   <svrl:fired-rule context="xs:element[ends-with(@name, 'Indicator')]/xs:annotation/xs:documentation[1]"/>
   <svrl:fired-rule context="xs:element[ends-with(@name, 'Indicator')]/xs:annotation/xs:documentation[1]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-30"
                        name="Standard opening phrase for complex type"/>
   <svrl:fired-rule context="xs:complexType/xs:annotation/xs:documentation[1]"/>
   <svrl:fired-rule context="xs:complexType/xs:annotation/xs:documentation[1]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-31"
                        name="Standard opening phrase for simple type"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-36"
                        name="Structures imported as conformant"/>
   <svrl:fired-rule context="xs:import[exists(@namespace)                                and xs:anyURI(@namespace) = xs:anyURI('http://release.niem.gov/niem/structures/4.0/')]"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-37"
                        name="XML namespace imported as conformant"/>
   <svrl:active-pattern document="file:/C:/git/cdmgtri/niem-ndr-validation-js/base-xsd/extension/extension.xsd"
                        id="rule_11-39"
                        name="Consistently marked namespace imports"/>
   <svrl:fired-rule context="xs:import"/>
   <svrl:fired-rule context="xs:import"/>
   <svrl:fired-rule context="xs:import"/>
   <svrl:fired-rule context="xs:import"/>
   <svrl:fired-rule context="xs:import"/>
</svrl:schematron-output>
